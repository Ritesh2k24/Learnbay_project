name: Deploy Employee Portfolio Infra

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Zip contact form Lambda function
        run: |
          mkdir -p lambda_zips
          zip -j lambda_zips/contact_handler.zip lambda/contact_handler.py

      - name: Zip visitor logger Lambda function
        run: |
          zip -j lambda_zips/visitor_logger.zip lambda/visitor_logger.py

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Export Terraform outputs to environment
        id: api
        run: |
          cd terraform
          echo 'API_URL<<EOF' >> $GITHUB_ENV
          terraform output -raw analytics_api_url >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

          echo 'S3_BUCKET_NAME<<EOF' >> $GITHUB_ENV
          terraform output -raw s3_bucket_name >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV


      - name: Inject API URL into frontend JS
        run: |
          cd terraform
          # Get clean API URL (first line only, remove debug info)
          RAW_API_URL=$(terraform output -raw analytics_api_url | head -n 1 | tr -d '\r\n')
    
          # Escape special characters for sed (using | as delimiter)
          ESCAPED_API_URL=$(printf '%s\n' "$RAW_API_URL" | sed 's/[&/\]/\\&/g; s/|/\\|/g')
    
          cd ../frontend
          # Verify placeholder exists before substitution
          if ! grep -q "API_PLACEHOLDER" contacts.js; then
            echo "Error: API_PLACEHOLDER not found in contacts.js"
            exit 1
          fi
          if ! grep -q "API_PLACEHOLDER" analytics.js; then
            echo "Error: API_PLACEHOLDER not found in analytics.js"
            exit 1
          fi
    
          # Perform substitutions
          sed -i "s|API_PLACEHOLDER|$ESCAPED_API_URL|g" contacts.js
          sed -i "s|API_PLACEHOLDER|$ESCAPED_API_URL|g" analytics.js
    
          # Verify changes
          echo "Updated API URL in contacts.js:"
          grep "$RAW_API_URL" contacts.js
          echo "Updated API URL in analytics.js:"
          grep "$RAW_API_URL" analytics.js


      - name: Upload static website to S3
        run: |
          aws s3 sync frontend/ s3://$S3_BUCKET_NAME --delete

      
      - name: Print API URL (for debugging)
        run: echo "API Gateway URL is $API_URL"

